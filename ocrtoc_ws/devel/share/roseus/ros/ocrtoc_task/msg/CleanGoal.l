;; Auto-generated. Do not edit!


(when (boundp 'ocrtoc_task::CleanGoal)
  (if (not (find-package "OCRTOC_TASK"))
    (make-package "OCRTOC_TASK"))
  (shadow 'CleanGoal (find-package "OCRTOC_TASK")))
(unless (find-package "OCRTOC_TASK::CLEANGOAL")
  (make-package "OCRTOC_TASK::CLEANGOAL"))

(in-package "ROS")
;;//! \htmlinclude CleanGoal.msg.html
(if (not (find-package "GEOMETRY_MSGS"))
  (ros::roseus-add-msgs "geometry_msgs"))


(defclass ocrtoc_task::CleanGoal
  :super ros::object
  :slots (_scene_id _frame_id _object_list _scale_list _pose_list ))

(defmethod ocrtoc_task::CleanGoal
  (:init
   (&key
    ((:scene_id __scene_id) "")
    ((:frame_id __frame_id) "")
    ((:object_list __object_list) (let (r) (dotimes (i 0) (push "" r)) r))
    ((:scale_list __scale_list) (make-array 0 :initial-element 0.0 :element-type :float))
    ((:pose_list __pose_list) (let (r) (dotimes (i 0) (push (instance geometry_msgs::Pose :init) r)) r))
    )
   (send-super :init)
   (setq _scene_id (string __scene_id))
   (setq _frame_id (string __frame_id))
   (setq _object_list __object_list)
   (setq _scale_list __scale_list)
   (setq _pose_list __pose_list)
   self)
  (:scene_id
   (&optional __scene_id)
   (if __scene_id (setq _scene_id __scene_id)) _scene_id)
  (:frame_id
   (&optional __frame_id)
   (if __frame_id (setq _frame_id __frame_id)) _frame_id)
  (:object_list
   (&optional __object_list)
   (if __object_list (setq _object_list __object_list)) _object_list)
  (:scale_list
   (&optional __scale_list)
   (if __scale_list (setq _scale_list __scale_list)) _scale_list)
  (:pose_list
   (&rest __pose_list)
   (if (keywordp (car __pose_list))
       (send* _pose_list __pose_list)
     (progn
       (if __pose_list (setq _pose_list (car __pose_list)))
       _pose_list)))
  (:serialization-length
   ()
   (+
    ;; string _scene_id
    4 (length _scene_id)
    ;; string _frame_id
    4 (length _frame_id)
    ;; string[] _object_list
    (apply #'+ (mapcar #'(lambda (x) (+ 4 (length x))) _object_list)) 4
    ;; float64[] _scale_list
    (* 8    (length _scale_list)) 4
    ;; geometry_msgs/Pose[] _pose_list
    (apply #'+ (send-all _pose_list :serialization-length)) 4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; string _scene_id
       (write-long (length _scene_id) s) (princ _scene_id s)
     ;; string _frame_id
       (write-long (length _frame_id) s) (princ _frame_id s)
     ;; string[] _object_list
     (write-long (length _object_list) s)
     (dolist (elem _object_list)
       (write-long (length elem) s) (princ elem s)
       )
     ;; float64[] _scale_list
     (write-long (length _scale_list) s)
     (dotimes (i (length _scale_list))
       (sys::poke (elt _scale_list i) (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
       )
     ;; geometry_msgs/Pose[] _pose_list
     (write-long (length _pose_list) s)
     (dolist (elem _pose_list)
       (send elem :serialize s)
       )
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; string _scene_id
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _scene_id (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; string _frame_id
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _frame_id (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; string[] _object_list
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _object_list (make-list n))
     (dotimes (i n)
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setf (elt _object_list i) (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
     ))
   ;; float64[] _scale_list
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _scale_list (instantiate float-vector n))
     (dotimes (i n)
     (setf (elt _scale_list i) (sys::peek buf ptr- :double)) (incf ptr- 8)
     ))
   ;; geometry_msgs/Pose[] _pose_list
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _pose_list (let (r) (dotimes (i n) (push (instance geometry_msgs::Pose :init) r)) r))
     (dolist (elem- _pose_list)
     (send elem- :deserialize buf ptr-) (incf ptr- (send elem- :serialization-length))
     ))
   ;;
   self)
  )

(setf (get ocrtoc_task::CleanGoal :md5sum-) "e6782454d481f8e42ebf37bc2cfd07ff")
(setf (get ocrtoc_task::CleanGoal :datatype-) "ocrtoc_task/CleanGoal")
(setf (get ocrtoc_task::CleanGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# task definition
string scene_id
string frame_id
string[] object_list
float64[] scale_list
geometry_msgs/Pose[] pose_list

================================================================================
MSG: geometry_msgs/Pose
# A representation of pose in free space, composed of position and orientation. 
Point position
Quaternion orientation

================================================================================
MSG: geometry_msgs/Point
# This contains the position of a point in free space
float64 x
float64 y
float64 z

================================================================================
MSG: geometry_msgs/Quaternion
# This represents an orientation in free space in quaternion form.

float64 x
float64 y
float64 z
float64 w

")



(provide :ocrtoc_task/CleanGoal "e6782454d481f8e42ebf37bc2cfd07ff")


